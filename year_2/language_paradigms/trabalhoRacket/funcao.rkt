#lang racket
(define yInicio 5)
(define qBaixo 5)
(define qDir -10)
(define intervalo 10)
(define xInicio 5)
(define cepindice 5)
(define yQuadra 5)
(define xQuadra 5)
(define cepIndice -1)
(define (func yInicio yInicio qDir intervalo )
	(begin
  		(cond [(< qDir 0) (set! yInicio(+  yInicio intervalo))])
                (cond [(< qDir 0) (set! xInicio(+  xInicio 0))])
                (cond [(< qDir 0) (set! xQuadra(+  xInicio 0))])
                (cond [(< qDir 0) (set! yQuadra(+  yInicio 0))])
                (cond [(< qDir 0) (set! qBaixo(+ qBaixo 1))])
                (cond [(< qDir 0) (set! qDir(+ cepIndice 0))])
        )
 )