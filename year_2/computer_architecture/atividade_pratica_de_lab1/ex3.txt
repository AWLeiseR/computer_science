000 LOAD M(020)       ADD(024) //carrega o endereço e add 1
001 STOR M(020)       LOAD M(100) //armazena em 020 e carrega 100(primeiro elemento) 
002 STOR M (021)      STOR M(022) //armazena em 021 e 022

//ATE AQUI CONDIÇAO INICIAL

003 LOAD M(020)       STOR M(005,8:19) //carrega endereço e altera na lina 006
004 ADD M(024)        STOR(020) //add 1 e aramzena em 20
005 LOAD |M(101)|     STOR(025) // carrega o valor de 101 armazena em 025
006 SUB M(021)        JUMP+ M(009)//MAIOR  sub trai o valor anterior caso menor q zero vai para 009
007 LOAD |M(022)|     SUB M(021) // carrega o valor de 022 
008 JUMP+ M(009)      JUMP M(00D)
009 LOAD (025)        DIV(023)
00A SUB M(027)        JUMP+ M(00D, 18:29)//PAR
00B LOAD M(020)       SUB M(024)
00C STOR M(00C,18:29) LOAD(100)
00D STOR M(022)       LOAD (020)
00E SUB(024)          STOR M(00F,8:19)
00F LOAD M(100)       STOR M(021)
010 LOAD M(026)       SUB M(024)
011 STOR M(026)       JUMP+ M(003)
 

020 000000100 //endereço
021 000000000 //maior par
022 000000000 // menor impar
023 000000002 // divisor
024 000000001 //const
025 000000000  //AUX
026 000000010 //tamanho
027 000000000

100 00000000001
101 00000000010
102 00000000002
103 00000000003
104 00000000004
105 00000000006
106 00000000005
107 00000000007
108 00000000008
109 00000000009
10A 0000000000A
10B 0000000000B
10C 00000000003
10D 00000000012
10E 00000000011
10F 00000000013
110 00000000014
111 00000000015
112 00000000016
113 00000000001

