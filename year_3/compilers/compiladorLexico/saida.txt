IDENTIFIER(foo)
L_PAREN
IDENTIFIER(a)
R_PAREN

L_CURLY_BRACKET

INT
IDENTIFIER(b)
ASSIGN
IDENTIFIER(a)
PLUS
NUM_INTEGER(1)
SEMICOLON

INT
IDENTIFIER(c)
ASSIGN
L_PAREN
IDENTIFIER(short)
R_PAREN
IDENTIFIER(a)
SEMICOLON

IF
L_PAREN
IDENTIFIER(b)
R_PAREN

RETURN
IDENTIFIER(b)
SEMICOLON

RETURN
NUM_INTEGER(1)
SEMICOLON

R_CURLY_BRACKET


INT
IDENTIFIER(funcao)
L_PAREN
INT
IDENTIFIER(a)
COMMA
CHAR
IDENTIFIER(b)
R_PAREN

L_CURLY_BRACKET

INT
IDENTIFIER(i)
SEMICOLON

CHAR
IDENTIFIER(c)
SEMICOLON


NUM_OCTAL(07)
PLUS
NUM_INTEGER(08)
PLUS
NUM_INTEGER(007)
PLUS
NUM_INTEGER(008)
PLUS
NUM_HEXA(0x9)
PLUS
NUM_HEXA(0X9)
SEMICOLON


IDENTIFIER(c)
ASSIGN
MULTIPLY
IDENTIFIER(funcao)
PLUS
STRING(oi mundo)
SEMICOLON



RETURN
L_PAREN
NUM_HEXA(0xa)
PLUS
NUM_HEXA(0XA)
PLUS
NUM_INTEGER(007)
PLUS
NUM_OCTAL(07)
R_PAREN
SEMICOLON

R_CURLY_BRACKET




IF
L_PAREN
NUM_INTEGER(1)
R_PAREN

L_CURLY_BRACKET

IDENTIFIER(ff)
ASSIGN
L_PAREN
INT
R_PAREN
NUM_INTEGER(23)
DIV
MULTIPLY
IDENTIFIER(i)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
error:lexical:15:399: '
CHARACTER(\a)
error:lexical:15:401: '
SEMICOLON

IDENTIFIER(ch)
ASSIGN
error:lexical:15:413: '
CHARACTER(\b)
error:lexical:15:415: '
SEMICOLON

IDENTIFIER(ch)
ASSIGN
error:lexical:15:427: '
CHARACTER(\f)
error:lexical:15:429: '
SEMICOLON

IDENTIFIER(ch)
ASSIGN
error:lexical:15:441: '
CHARACTER(\n)
error:lexical:16:1: '
SEMICOLON

IDENTIFIER(ch)
ASSIGN
error:lexical:16:13: '
CHARACTER(\r)
error:lexical:16:15: '
SEMICOLON

IDENTIFIER(ch)
ASSIGN
error:lexical:16:27: '
CHARACTER(\t)
error:lexical:16:29: '
SEMICOLON

IDENTIFIER(ch)
ASSIGN
error:lexical:16:41: '
CHARACTER(\v)
error:lexical:16:43: '
SEMICOLON

IDENTIFIER(ch)
ASSIGN
error:lexical:16:55: '
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(\)
error:lexical:16:72: '
SEMICOLON

IDENTIFIER(ch)
ASSIGN
error:lexical:16:84: '
error:lexical:16:87: '
SEMICOLON

IDENTIFIER(ch)
ASSIGN
SEMICOLON

IDENTIFIER(ch)
ASSIGN
error:lexical:16:115: '
NUM_INTEGER(0)
error:lexical:16:118: '
SEMICOLON


IDENTIFIER(ch)
ASSIGN
CHARACTER(!)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(@)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(#)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER($)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(%)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(^)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(&)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(*)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(()
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER())
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(_)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(?)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER( )
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(+)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(-)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(/)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(.)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(:)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(;)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(<)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(=)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(>)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(,)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER([)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(])
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(})
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER({)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(`)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(~)
SEMICOLON

IDENTIFIER(ch)
ASSIGN
CHARACTER(|)
SEMICOLON

error:lexical:16:550: unterminated comment